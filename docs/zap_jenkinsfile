def target
def api_target
pipeline {
    agent any
    parameters {
        string defaultValue: "http://192.168.56.1:3000/",
                description: 'Target URL to scan',
                name: 'TARGET'
                
        string defaultValue: "https://raw.githubusercontent.com/elenore55/jenkins-test/main/JuiceShop.json",
                description: 'API target',
                name: 'API_TARGET'
    }
    stages {
        stage('Pipeline Info') {
            steps {
                script {
                    echo "Parameter Initialization"
                    echo """
                    The current parameters are:
                        Target: ${params.TARGET}
                        API Target: ${params.API_TARGET}
                    """
                }
            }
         }
 
        stage('Setting up OWASP ZAP docker container') {
            steps {
                script {
                    echo "Pulling up last OWASP ZAP container --> Start"
                    sh 'docker pull owasp/zap2docker-stable'
                    echo "Pulling up last VMS container --> End"
                    echo "Starting container --> Start"
                    sh """
                    docker run -dt --name owasp \
                    owasp/zap2docker-stable \
                    /bin/bash
                    """
                }
            }
        }
 
        stage('Initialize wrk directory') {
            steps {
                script {
                    echo "Creating wrk directory"
                    
                    sh """
                        docker exec owasp \
                        mkdir /zap/wrk
                    """
                }
                
                script {
                    echo "Moving context to wrk directory"
                    
                    sh 'docker cp /var/run/juice.context owasp:/zap/wrk/juice.context'
                    sh 'docker cp /var/run/Juice_Shop_Session_Management.js owasp:/zap/wrk/Juice_Shop_Session_Management.js'
                    sh 'docker cp /var/run/Selenium_Juice_Shop.js owasp:/zap/wrk/Selenium_Juice_Shop.js'
                }
            }
        }
        
        stage('API scan') {
            steps {
                script {
                    echo "API SCAN"
                    api_target = "${params.API_TARGET}"
                
                    sh """
                        docker exec owasp \
                        zap-api-scan.py \
                        -I -a \
                        -t $api_target \
                        -f openapi \
                        -x api_report.xml \
                        -r api_report.html \
                        -w api_report.md
                    """
                }
            }
        }
        
        stage('Baseline scan') {
            steps {
                script {
                    echo "BASELINE SCAN"
                    target = "${params.TARGET}"
                    
                    sh """
                        docker exec owasp \
                        zap-baseline.py \
                        -n juice.context \
                        -U test \
                        -z "-config script.scripts(0).name='Juice_Shop_Session_Management.js' -config script.scripts(0).engine='Graal.js' -config script.scripts(0).type=session_management -config script.scripts(0).file='/zap/wrk/Juice_Shop_Session_Management.js' -config script.scripts(1).name='Selenium_Juice_Shop.js' -config script.scripts(1).engine='Graal.js' -config script.scripts(1).type=selenium -config script.scripts(1).enabled=true -config script.scripts(1).file='/zap/wrk/Selenium_Juice_Shop.js'" \
                        -I -t $target \
                        -x baseline_report.xml \
                        -r baseline_report.html \
                        -w baseline_report.md
                    """
                }
            }
        }
        
        stage('Full scan') {
            steps {
                script {
                    echo "FULL SCAN"
                    target = "${params.TARGET}"
                    
                    sh """
                        docker exec owasp \
                        zap-full-scan.py \
                        -n juice.context \
                        -U test \
                        -I -j -a -m 5 \
                        -z "-config scanner.maxScanDurationInMins=5 -config scanner.threadPerHost=8 -config view.mode=attack -config script.scripts(0).name='Juice_Shop_Session_Management.js' -config script.scripts(0).engine='Graal.js' -config script.scripts(0).type=session_management -config script.scripts(0).file='/zap/wrk/Juice_Shop_Session_Management.js' -config script.scripts(1).name='Selenium_Juice_Shop.js' -config script.scripts(1).engine='Graal.js' -config script.scripts(1).type=selenium -config script.scripts(1).enabled=true -config script.scripts(1).file='/zap/wrk/Selenium_Juice_Shop.js'" \
                        -t $target \
                        -x full_report.xml \
                        -r full_report.html \
                        -w full_report.md
                    """
                    //-x report-$(date +%d-%b-%Y).xml
                }
            }
        }

        stage('Copy Reports to Workspace') {
            steps {
                script {
                    sh '''
                        docker cp owasp:/zap/wrk/api_report.xml ${WORKSPACE}/api_report.xml
                        docker cp owasp:/zap/wrk/api_report.html ${WORKSPACE}/api_report.html
                        docker cp owasp:/zap/wrk/api_report.md ${WORKSPACE}/api_report.md
                        
                        docker cp owasp:/zap/wrk/baseline_report.xml ${WORKSPACE}/baseline_report.xml
                        docker cp owasp:/zap/wrk/baseline_report.html ${WORKSPACE}/baseline_report.html
                        docker cp owasp:/zap/wrk/baseline_report.md ${WORKSPACE}/baseline_report.md
                        
                        docker cp owasp:/zap/wrk/full_report.xml ${WORKSPACE}/full_report.xml
                        docker cp owasp:/zap/wrk/full_report.html ${WORKSPACE}/full_report.html
                        docker cp owasp:/zap/wrk/full_report.md ${WORKSPACE}/full_report.md
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Removing container"
            sh '''
                docker stop owasp
                docker rm owasp
            '''
        }
    }
}